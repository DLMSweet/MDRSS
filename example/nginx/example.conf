upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    server 127.0.0.1:8000 fail_timeout=0;

}

proxy_cache_path /var/nginx/cache keys_zone=mdah_cache:60m;

server {
        listen              80 deferred;
        listen              [::]:80;

        server_name CHANGEME;
        return 301 https://$host$request_uri;
}
server {
        # SSL configuration
        listen              443 ssl http2;
        listen              [::]:443 ssl http2;
        ssl_certificate     /etc/letsencrypt/live/CHANGEME/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/CHANGEME/privkey.pem;

        root /var/www/CHANGEME/html;
        access_log /var/log/nginx/CHANGEME_access.log;

        # Add index.php to the list if you are using PHP
        index index.html ;

        server_name CHANGEME;

        location /image {
             proxy_redirect off;
             proxy_buffering on;
             proxy_pass http://app_server;
             proxy_cache mdah_cache;
             proxy_cache_valid      200  1d;
             proxy_set_header       Host $host;
        }

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;
             proxy_set_header Host $http_host;
             # we don't want nginx trying to do something clever with
             # redirects, we set the Host: header above already.
             proxy_redirect off;
             proxy_pass http://app_server;
        }


}

